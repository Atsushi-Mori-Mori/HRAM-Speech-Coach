#　-*- coding: utf-8 -*-
import sys
import os
import re
import struct
import binascii
import numpy as np
from math import floor, ceil
# -------------------------------------------------------
import pandas as pd
import numpy as np
import glob
import shutil
# -------------------------------------------------------
import matplotlib.pyplot as plt
import cv2
import numpy as np
from pydub import AudioSegment
# # -------------------------------------------------------
# #(1)データ読込
file01 = glob.glob('./data_csv/data1_49000/*.csv')
conf_df = pd.read_csv('../Posenet/data_csv/data/conf.csv')
shutil.rmtree("./data_csv/data3_49000")
os.mkdir("./data_csv/data3_49000")
# # -------------------------------------------------------
file01_df = pd.DataFrame(file01)
file01_df['fname'] = "file"
for k in range(len(file01_df)):
    file01_df.iloc[k,1] = file01_df.iloc[k,0][22:-6]
file10_df = file01_df['fname'].drop_duplicates().reset_index(drop=True)
# # -------------------------------------------------------
# for ka in range(1):
for ka in range(len(file10_df)):
    fname = file10_df[ka]
    file10 = glob.glob('./data_csv/data1_4900/'+fname+'*.csv')
    time01_df = pd.read_excel('./data_csv/time_'+fname+'.xlsx')
    time10_df = time01_df[time01_df['SPnum']==1].reset_index(drop=True)
    pnum = 0
    for kb in range(len(time10_df)):
        fnum = int(time10_df['lap'][kb]//10)
        for kc in range(fnum):
            tmp01_df = pd.read_csv(file10[pnum+kc], index_col=0)
            if kc == 0:
                tmp02_df = tmp01_df.copy()
            else:
                tmp02_df = pd.concat([tmp02_df,tmp01_df],axis=0)
        ### -------------------------
        tmp02_df = tmp02_df.reset_index(drop=True)
        # # -------------------------------------------------------
        frate = 0
        videotime = 10
        sw = 3 #3値分類用
        # sw = 4 #4値分類用
        ### -------------------------
        for m in range(len(conf_df)):
            if fname == conf_df["file"][m]:
                frate = conf_df["framerate"][m]
        if frate == 0:
            print("No framerate data")
        ### -------------------------
        splnum = int(((len(tmp02_df)/frate)-videotime)//sw + 1)
        # # -------------------------------------------------------
        for kd in range(splnum):
            tmp10_df = tmp02_df[frate*(kd*sw):frate*((kd*sw)+videotime)].reset_index(drop=True)
            tmp10_df.to_csv("./data_csv/data3_49000/"+fname+str(kb).zfill(2)+str(kd).zfill(3)+".csv")
        ### -------------------------
        pnum = pnum + fnum
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------

