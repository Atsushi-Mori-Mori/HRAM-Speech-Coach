#　-*- coding: utf-8 -*-
import sys
import os
import re
import struct
import binascii
import numpy as np
from math import floor, ceil
# -------------------------------------------------------
import pandas as pd
import numpy as np
import glob
# -------------------------------------------------------
import matplotlib.pyplot as plt
import cv2
import numpy as np
# # -------------------------------------------------------
# # -------------------------------------------------------
# ###(3) wavファイル解析
import matplotlib.pyplot as plt
import numpy as np
from pydub import AudioSegment
# ボイスメモで収録したm4aファイルを読み込む
# # --------------
file01 = glob.glob('./pnkp/*posenet_kp.csv')
conf_df = pd.read_csv('./data_csv/data/conf.csv')
# # --------------
for k in range(len(file01)):
    fname = file01[k][7:-15]
    data_df = pd.read_csv(file01[k])
    opfnum = len(data_df)
    # # -----------------------
    # mp3ファイルを読み込む
    sounds = AudioSegment.from_file('./mp3/'+fname+'.mp3','mp3')
    # 基本情報の表示
    print(fname)
    print(f'channel: {sounds.channels}')
    print(f'frame rate: {sounds.frame_rate}')
    print(f'duration: {sounds.duration_seconds} s')
    # チャンネルが2 （ステレオ) の場合，交互にデータが入っているので，二つおきに読み出す。
    # ただし，今回の場合はモノラルのはず。つまり，sounds.channels = 1
    sig = np.array(sounds.get_array_of_samples())[::sounds.channels]
    dt = 1.0/sounds.frame_rate # サンプリング時間
    # 時間アレイを作る
    tms = 0.0 # サンプル開始時間を0にセット
    tme = sounds.duration_seconds # サンプル終了時刻
    tm = np.linspace(tms, tme, len(sig), endpoint=False) # 時間ndarrayを作成
    # # -----------------------
    # # フレーム毎の音の強弱を抽出
    frame_rate = sounds.frame_rate
    # # --------------
    sig_df = pd.DataFrame(sig)
    sig2_df = pd.DataFrame(abs(sig_df[0]))
    # # --------------
    # # 強制的にOpenPoseのフレーム数にsound sample数を合せて出力させる
    frame_audio = len(sig2_df)/opfnum
    # # ---
    sspls = []
    for m in range(opfnum):
        if m == opfnum - 1:
            sspls.append(sig2_df[int(frame_audio*m):].mean())
        else:
            sspls.append(sig2_df[int(frame_audio*m):int(frame_audio*(m+1))].mean())
    sspls_df = pd.DataFrame(sspls)
    sspls_df.to_csv("./sounds/"+fname+"_sound_samples.csv")
    sspls_df = sspls_df.rename(columns={0:'Audio'})
    data_df = pd.concat([data_df,sspls_df], axis=1)
    data_df = data_df.drop(["frame"], axis=1)
    data_df.to_csv("./data_csv/"+fname+".csv")
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------
# # -------------------------------------------------------

